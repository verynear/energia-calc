I"(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  AuditReports.Views.NameCalcField = (function(superClass) {
    extend(NameCalcField, superClass);

    function NameCalcField() {
      return NameCalcField.__super__.constructor.apply(this, arguments);
    }

    NameCalcField.prototype.className = 'col-auto';

    NameCalcField.prototype.inputClass = "js-structure-name-calc-field";

    NameCalcField.prototype.syncCalcFieldValue = function() {
      return $.ajax({
        method: 'PUT',
        url: "/calc/calc_structures/" + (this.model.get('id')),
        data: {
          structure: {
            name: this.$input.val()
          }
        }
      });
    };

    return NameCalcField;

  })(AuditReports.Views.CalcField);

}).call(this);
:ET