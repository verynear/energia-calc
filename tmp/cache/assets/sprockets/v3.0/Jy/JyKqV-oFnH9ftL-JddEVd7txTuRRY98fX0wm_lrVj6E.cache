I"Y(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  AuditReports.Views.OriginalStructureField = (function(superClass) {
    extend(OriginalStructureField, superClass);

    function OriginalStructureField() {
      this._afterSyncFieldValue = bind(this._afterSyncFieldValue, this);
      return OriginalStructureField.__super__.constructor.apply(this, arguments);
    }

    OriginalStructureField.prototype.syncUrl = function() {
      return ("/calc/audit_reports/" + (this.model.get('audit_report_id')) + "/") + ("original_structure_field_values/" + (this.model.get('real_id')));
    };

    OriginalStructureField.prototype.title = function() {
      return "Pre-report " + (this.model.get('name'));
    };

    OriginalStructureField.prototype.initialize = function(options) {
      return this.listenTo(this.model, 'change:value', this.render);
    };

    OriginalStructureField.prototype._afterSyncFieldValue = function(data) {
      OriginalStructureField.__super__._afterSyncFieldValue.call(this, data);
      return AuditReports.EventBus.trigger("channel:original_structure_field_value:" + (this.model.get('real_id')), ['change', data.new_value]);
    };

    return OriginalStructureField;

  })(AuditReports.Views.Field);

}).call(this);
:ET