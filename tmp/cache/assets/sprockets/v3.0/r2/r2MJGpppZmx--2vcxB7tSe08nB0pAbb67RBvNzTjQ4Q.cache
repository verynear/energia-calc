I"7(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  AuditReports.Views.AddMeasureModal = (function(superClass) {
    extend(AddMeasureModal, superClass);

    function AddMeasureModal() {
      return AddMeasureModal.__super__.constructor.apply(this, arguments);
    }

    AddMeasureModal.prototype.events = {
      'click .js-add-measure-submit': 'onClickAddMeasureSubmit',
      'click .js-modal-close': 'onClickClose'
    };

    AddMeasureModal.prototype.afterLoad = function() {
      return this.$form = this.$('form');
    };

    AddMeasureModal.prototype.onClickAddMeasureSubmit = function(event) {
      event.preventDefault();
      return $.ajax({
        url: this.measureSelectionUrl(),
        data: this.$form.serialize(),
        method: 'POST',
        success: (function(_this) {
          return function(data) {
            _this.model.get('measure_selections').push(data.measure_selection);
            triggerAuditReportSummary(data);
            return _this.$el.trigger('closeModal');
          };
        })(this)
      });
    };

    AddMeasureModal.prototype.measureSelectionUrl = function() {
      var id;
      id = this.model.get('id');
      return "/calc/audit_reports/" + id + "/measure_selections";
    };

    return AddMeasureModal;

  })(Modal);

}).call(this);
:ET