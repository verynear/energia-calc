I"‰(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  AuditReports.Views.EditAuditReportPage = (function(superClass) {
    extend(EditAuditReportPage, superClass);

    function EditAuditReportPage() {
      return EditAuditReportPage.__super__.constructor.apply(this, arguments);
    }

    EditAuditReportPage.prototype.initialize = function(options) {
      if (options == null) {
        options = {};
      }
      return this.measureModalUrl = options.measureModalUrl, this.Fields = options.Fields, options;
    };

    EditAuditReportPage.prototype.render = function() {
      var $editAuditReport, totalsBar;
      this.$('.content > .container').html("<div class='js-edit-audit-report'></div>");
      $editAuditReport = $('.js-edit-audit-report');
      this.calc_fields.forEach((function(_this) {
        return function(section) {
          var row;
          row = new AuditReports.Views.AuditReportCalcFieldsRow({
            model: _this.model,
            section: section
          });
          return $editAuditReport.append(row.render());
        };
      })(this));
      totalsBar = new AuditReports.Views.TotalsBar({
        model: this.model.get('audit_report_summary')
      });
      this.$('.content').after(totalsBar.render());
      totalsBar.postRender();
      return this.$el;
    };

    return EditAuditReportPage;

  })(Backbone.View);

}).call(this);
:ET