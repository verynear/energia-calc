I"Í(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  DisplayReports.Views.Photo = (function(superClass) {
    extend(Photo, superClass);

    function Photo() {
      this.render = bind(this.render, this);
      return Photo.__super__.constructor.apply(this, arguments);
    }

    Photo.prototype.className = "gallery__item";

    Photo.prototype.template = _.template("<a class=\"gallery__modal-trigger js-gallery\"\n  href=\"<%= mediumUrl %>\"\n  data-fancybox-group=\"gallery\">\n    <img src=\"<%= thumbUrl %>\">\n</a>\n<input type=\"radio\"\n  <%= checked %>\n  name=\"select-display-report-image\"\n  id=\"<%= id %>\"\n  class=\"js-select-image-radio\">");

    Photo.prototype.events = {
      'change .js-select-image-radio': 'onChangeSelectImage'
    };

    Photo.prototype.render = function() {
      this.$el.html(this.template({
        checked: this.model.get('selected') ? 'checked' : '',
        id: this.model.get('id'),
        mediumUrl: this.model.get('medium_url'),
        thumbUrl: this.model.get('thumb_url')
      }));
      return this.$el;
    };

    Photo.prototype.auditReportUrl = function() {
      var displayReport, reportId;
      displayReport = this.model.get('display_report');
      reportId = displayReport.get('id');
      return "/calc/audit_reports/" + reportId;
    };

    Photo.prototype.onChangeSelectImage = function(event) {
      this.model.collection.setSelected(this.model);
      return $.ajax({
        method: 'PUT',
        url: this.auditReportUrl(),
        data: {
          audit_report: {
            wegoaudit_photo_id: this.model.get('id')
          }
        },
        success: (function(_this) {
          return function(data) {
            return _this.model.get('display_report').set(data.display_report);
          };
        })(this)
      });
    };

    return Photo;

  })(Backbone.View);

}).call(this);
:ET